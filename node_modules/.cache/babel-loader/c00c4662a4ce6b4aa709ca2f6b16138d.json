{"ast":null,"code":"var _jsxFileName = \"/home/rkiyoto/personal/financialplanner/src/components/AmountInput/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-console */\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst format = input => input.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n\nconst AmountInput = () => {\n  _s();\n\n  const [formattedAmount, setFormattedAmount] = useState(\"\");\n\n  const handleInputChange = e => {\n    console.log(\"ðŸš€ ~ file: index.tsx ~ line 12 ~ handleInputChange ~ e\", e.currentTarget.value); // TODO: needs formatting\n\n    setFormattedAmount(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    value: formattedAmount,\n    onChange: event => handleInputChange(event)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AmountInput, \"o9PiMg3jjcIJGSHGFQasR5q8Brk=\");\n\n_c = AmountInput;\nexport default AmountInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmountInput\");","map":{"version":3,"sources":["/home/rkiyoto/personal/financialplanner/src/components/AmountInput/index.tsx"],"names":["React","useState","format","input","replace","AmountInput","formattedAmount","setFormattedAmount","handleInputChange","e","console","log","currentTarget","value","event"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IACbA,KAAK,CAACC,OAAN,CAAc,yBAAd,EAAyC,KAAzC,CADF;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMO,iBAAiB,GAAIC,CAAD,IAA4C;AACpEC,IAAAA,OAAO,CAACC,GAAR,CACE,wDADF,EAEEF,CAAC,CAACG,aAAF,CAAgBC,KAFlB,EADoE,CAKpE;;AACAN,IAAAA,kBAAkB,CAACE,CAAC,CAACG,aAAF,CAAgBC,KAAjB,CAAlB;AACD,GAPD;;AASA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEP,eAHT;AAIE,IAAA,QAAQ,EAAGQ,KAAD,IAAWN,iBAAiB,CAACM,KAAD;AAJxC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApBD;;GAAMT,W;;KAAAA,W;AAsBN,eAAeA,WAAf","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState } from \"react\";\n\nconst format = (input: string) =>\n  input.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n\nconst AmountInput = () => {\n  const [formattedAmount, setFormattedAmount] = useState(\"\");\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\n      \"ðŸš€ ~ file: index.tsx ~ line 12 ~ handleInputChange ~ e\",\n      e.currentTarget.value\n    );\n    // TODO: needs formatting\n    setFormattedAmount(e.currentTarget.value);\n  };\n\n  return (\n    <input\n      type=\"number\"\n      name=\"amount\"\n      value={formattedAmount}\n      onChange={(event) => handleInputChange(event)}\n    />\n  );\n};\n\nexport default AmountInput;\n"]},"metadata":{},"sourceType":"module"}